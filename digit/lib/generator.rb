# frozen_string_literal: true

require './lib/constants'

module Digit
  # Generates a Digit Textual Representation file
  class Generator
    def initialize(contract)
      @contract_name = contract.name
      @state = contract.state
      @functions = contract.functions

      @content = ''
      @file_name = "#{contract_name}.dtr"
    end

    def generate
      generate_header
      generate_contract_section
      generate_state_section
      generate_functions_section

      File.open(file_name, 'w') { |file| file.write(content) }
    end

    def self.generate(contract_name, state, functions)
      new(contract_name, state, functions).generate
    end

    private

    attr_reader :contract_name, :state, :functions, :content, :file_name

    def generate_header
      @content += "Generated by Digit (#{Digit::Constants::VERSION}) at #{Time.now}\n\n"
    end

    def generate_contract_section
      @content += "[Contract]: #{contract_name}\n"
    end

    def generate_state_section
      @content += "\n[State]:\n"
    end

    def generate_functions_section
      @content += "\n[Functions]:\n"
    end
  end
end
