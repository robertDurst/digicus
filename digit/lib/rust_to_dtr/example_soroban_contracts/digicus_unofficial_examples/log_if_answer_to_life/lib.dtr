[Contract]: LogIfAnswerToLife

[InternalFunctions]:
-() [fourty_two_and_then_some]
* Inputs:
{
env: Env
possibly_the_answer_to_life: u32
}
* Instructions:
$
{ instruction: evaluate, input: (equal_to, possibly_the_answer_to_life, ANSWER_TO_LIFE), assign: UNARY_ARGUMENT_0, scope: 0 }
{ instruction: evaluate, input: (!, UNARY_ARGUMENT_0), assign: CONDITIONAL_JUMP_ASSIGNMENT, scope: 0 }
{ instruction: conditional_jump, input: (CONDITIONAL_JUMP_ASSIGNMENT, 1), scope: 0 }
{ instruction: evaluate, input: (log_to_env, env, "Yes, the answer to life is 42!"), scope: 1 }
$
:[InternalFunctions]

[User Defined Types]:
:[User Defined Types]
[State]:
* [ANSWER_TO_LIFE]
	* Type: u32
	* Initial Value: 42

[ExternalFunctions]:
-() [log_to_env]
* Inputs:
{
env: Env
message: String
}
* Instructions:
$
	{ instruction: log_string, input: (env, message), scope: 0 }
$
:[ExternalFunctions]