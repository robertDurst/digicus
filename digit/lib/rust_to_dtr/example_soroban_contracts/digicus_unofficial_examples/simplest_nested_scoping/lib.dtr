[Contract]: NestedScoping

[Interface]:
-() [fourty_two_and_then_some]
	* Inputs:
	{
		some_input: Integer
	}
	* Output: Integer
	* Instructions:
		$
			{ instruction: evaluate, input: (greater_than, some_input, 10), assign: CONDITIONAL_JUMP_ASSIGNMENT, scope: 0 }
			{ instruction: jump, input: (CONDITIONAL_JUMP_ASSIGNMENT, 1), scope: 0 }
			{ instruction: evaluate, input: (greater_than, some_input, 15), assign: CONDITIONAL_JUMP_ASSIGNMENT, scope: 1 }
			{ instruction: jump, input: (CONDITIONAL_JUMP_ASSIGNMENT, 2), assign: Thing_to_return, scope: 1 }
			{ instruction: assign, input: (5), assign: x, scope: 2 }
		$
:[Interface]


