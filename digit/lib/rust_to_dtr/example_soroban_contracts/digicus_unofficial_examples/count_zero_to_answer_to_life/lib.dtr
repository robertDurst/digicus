[Contract]: CountZeroToAnswerToLife

[Interface]:
-() [count_zero_to_answer_to_life]
	* Inputs:
	{
	}
	* Instructions:
		$
			{ instruction: create_range, input: (Zero, AnswerToLife), assign: i, scope: 0 }
			{ instruction: label, input: (loop_0_top), scope: 0 }
			{ instruction: end_of_iteration_check, input: (i), assign: CHECK_CONDITION_ASSIGNMENT, scope: 0 }
			{ instruction: conditional_goto, input: (CHECK_CONDITION_ASSIGNMENT, loop_0_exit), scope: 0 }
			{ instruction: log_string, input: ("Counting: {}", i), scope: 0 }
			{ instruction: increment, input: (i), scope: 0 }
			{ instruction: unconditional_goto, input: (loop_0_top), scope: 0 }
			{ instruction: label, input: (loop_0_exit), scope: 0 }
		$
:[Interface]


[User Defined Types]:
:[User Defined Types]
[State]:
* [Zero]
	* Type: Integer
	* Initial Value: 0
* [AnswerToLife]
	* Type: Integer
	* Initial Value: 42