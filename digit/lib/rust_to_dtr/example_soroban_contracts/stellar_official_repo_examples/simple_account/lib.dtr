[Contract]: SimpleAccount

[Interface]:
-() [init]
	* Inputs:
	{
		env: Env
		public_key: ByteStringSmall
	}
	* Instructions:
		$
			{ id: 7, instruction: evaluate, input: (env.storage), assign: METHOD_CALL_EXPRESSION_4, scope: 0 }
			{ id: 8, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_4.instance), assign: METHOD_CALL_EXPRESSION_3, scope: 0 }
			{ id: 9, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_3.has, DataKey::Owner), assign: CONDITIONAL_JUMP_ASSIGNMENT_0, scope: 0 }
			{ id: 11, instruction: jump, input: (CONDITIONAL_JUMP_ASSIGNMENT_0, 10), scope: 0 }
			{ id: 12, instruction: exit_with_message, input: ("owner is already set"), scope: 10 }
			{ id: 13, instruction: jump, input: (0), scope: 10 }
			{ id: 22, instruction: evaluate, input: (env.storage), assign: METHOD_CALL_EXPRESSION_19, scope: 0 }
			{ id: 23, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_19.instance), assign: METHOD_CALL_EXPRESSION_18, scope: 0 }
			{ id: 24, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_18.set, DataKey::Owner, public_key), scope: 0 }
		$
-() [__check_auth]
	* Inputs:
	{
		env: Env
		signature_payload: ByteStringSmall
		signature: ByteStringLarge
		_auth_context: List<Context>
	}
	* Instructions:
		$
			{ id: 8, instruction: evaluate, input: (env.storage), assign: METHOD_CALL_EXPRESSION_5, scope: 0 }
			{ id: 9, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_5.instance), assign: METHOD_CALL_EXPRESSION_4, scope: 0 }
			{ id: 10, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_4.get, DataKey::Owner), assign: METHOD_CALL_EXPRESSION_1, scope: 0 }
			{ id: 11, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_1.unwrap), assign: public_key|||ByteStringSmall, scope: 0 }
			{ id: 23, instruction: evaluate, input: (env.crypto), assign: METHOD_CALL_EXPRESSION_20, scope: 0 }
			{ id: 17, instruction: evaluate, input: (signature_payload.into), assign: METHOD_CALL_ARG_2_14, scope: 0 }
			{ id: 24, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_20.ed25519_verify, public_key, METHOD_CALL_ARG_2_14, signature), scope: 0 }
		$
:[Interface]


[User Defined Types]:
* (DataKey_ENUM)
{
	Owner: ()
}

:[User Defined Types]